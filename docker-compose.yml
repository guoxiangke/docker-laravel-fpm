version: '3'
services:
  # https://www.digitalocean.com/community/tutorials/how-to-set-up-laravel-nginx-and-mysql-with-docker-compose
  #PHP Service
  app:
    image: ${DOCKER_BUILD_IMAGE}
    links:
      - db:mysql
      - redis
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      CONTAINER_ROLE: app
      UPLOAD_LIMIT: 128M
      MEMORY_LIMIT: 128M
      REDIS_PORT: 6379
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
    # working_dir: /var/www/html
    volumes:
      - app_code:/var/www/html/
      - ./storage/app:/var/www/html/storage/app:rw
      - .env.production:/var/www/html/.env
      - ./docker/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
      # for dev fast
      - ./composer:/var/www/html/composer
      - ./app:/var/www/html/app
      - ./routes:/var/www/html/routes
      - ./config:/var/www/html/config
      - ./resources:/var/www/html/resources
      - /tmp:/tmp
    networks:
      - backend

  # Nginx Service
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - app_code:/var/www/html/
      - ./docker/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      VIRTUAL_HOST: your.domain.com
      LETSENCRYPT_HOST: your.domain.com
      LETSENCRYPT_EMAIL: dale.tel@139.com
    ports:
      - "8081:80"
    networks:
      - overlay
      - backend
    links:
      - app

  #MySQL Service
  db:
    image: mysql:latest
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci', '--default-authentication-plugin=mysql_native_password']
    restart: unless-stopped
    volumes:
      - db_data:/var/lib/mysql
      - /tmp:/sql
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
    networks:
      - backend

  redis:
    image: redis:latest
    restart: always
    networks:
      - backend

  scheduler:
    image: ${DOCKER_BUILD_IMAGE}
    restart: always
    depends_on:
      - app
    links:
      - db:mysql
      - redis
    networks:
      - backend
    volumes:
      - app_code:/var/www/html/
      - ./storage/app:/var/www/html/storage/app:rw
      - .env.production:/var/www/html/.env
    environment:
      REDIS_PORT: 6379
      CONTAINER_ROLE: scheduler
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
  queue:
    image: ${DOCKER_BUILD_IMAGE}
    restart: always
    depends_on:
      - app
    links:
      - db:mysql
      - redis
    networks:
      - backend
    volumes:
      - app_code:/var/www/html/
      - ./storage/app:/var/www/html/storage/app:rw
      - .env.production:/var/www/html/.env
    environment:
      REDIS_PORT: 6379
      CONTAINER_ROLE: queue
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
#Docker Networks
networks:
  overlay:
    driver: bridge
  backend:
volumes:
  db_data:
  app_code:
